version: "3"

# All available services
services:

  # Computation
  jupyter:
    container_name: "ds_jupyter"
    restart: "always"
    build: services/jupyter
    env_file:
      - ./config/jupyter.env
      - ./config/minio.env
      - ./config/shared_database.env
    volumes:
      - ./shared/notebooks/:/home/jovyan/work/notebooks
      # - ./shared/dags/:/home/jovyan/work/dags
      # - ./services/apistar/api/:/home/jovyan/work/api
    ports:
      - 8888:8888
    entrypoint: sh -c 'start-notebook.sh --NotebookApp.token=$$JUPYTER_PASSWORD'

  # DB Admin Console
  adminer:
    container_name: "ds_adminer"
    image: adminer
    restart: always
    ports:
      - 8080:8080

  # SQL database
  postgres:
    container_name: "ds_postgres"
    restart: "always"
    image: postgres
    env_file:
      - ./config/postgres.env
      - ./config/shared_database.env
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
      - ./services/postgres/:/docker-entrypoint-initdb.d/
    ports:
      - 5432:5432

  # NoSQL database
  mongodb:
    container_name: "ds_mongodb"
    image: mongo:3.6.2
    restart: always
    ports:
      - 27017:27017
    env_file:
      - ./config/mongo.env

  # Model Storage
  minio:
    container_name: "ds_minio"
    restart: "always"
    image: minio/minio
    env_file:
      - ./config/minio.env
    volumes:
      - minio_volume:/data
    ports:
      - 9000:9000
    command: server /data

  # Admin Overview
  portainer:
    container_name: "ds_portainer"
    restart: "always"
    image: portainer/portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_volume:/data
    ports:
      - 9090:9000
    command: -H unix:///var/run/docker.sock

# Volumes to persist data
volumes:
  postgres_volume:
  minio_volume:
  portainer_volume:
